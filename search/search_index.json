{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\udd85 Surveyhawk Docs","text":"<p>Willkommen in den Dokumentationen zu Surveyhawk! Durch die Navigation dieser Kapitel kannst du die Repository-Gesundheit verstehen, analysieren und optimieren.</p>"},{"location":"#introduction","title":"\ud83d\udcd8 Introduction","text":""},{"location":"#repository-gesundheit","title":"Repository Gesundheit","text":""},{"location":"#foundations","title":"\ud83d\udcda Foundations","text":""},{"location":"#surveyhawk","title":"Surveyhawk","text":""},{"location":"#features","title":"\u2728 Features","text":""},{"location":"#metrics","title":"\ud83d\udd0e Metrics","text":""},{"location":"#ergebnisse-und-analyse","title":"Ergebnisse und Analyse","text":""},{"location":"#results-and-learning","title":"\ud83d\udcc9 Results and Learning","text":""},{"location":"#fazit","title":"Fazit","text":""},{"location":"#conclusion","title":"\ud83d\udcdc Conclusion","text":""},{"location":"#weitere-schritte","title":"\ud83d\ude80 Weitere Schritte","text":"<p>Installation </p> <p>Getting-Started </p> <p>Contribution </p> <p>FAQ </p>"},{"location":"Contributing/Contributing/","title":"Contributing Guide","text":"<p>Vielen Dank f\u00fcr dein Interesse, zu diesem Projekt beizutragen! Dieses Dokument soll dir helfen, zu verstehen, wie du effektiv mitmachen kannst. Obwohl dieses Projekt in einer Enterprise-Umgebung entwickelt wurde, folgen wir den Best Practices der Open-Source-Welt.</p>"},{"location":"Contributing/Contributing/#repository-link","title":"Repository-Link","text":"<p>Das Repository befindet sich hier: [Repository-Link einf\u00fcgen]</p>"},{"location":"Contributing/Contributing/#wie-du-beitragen-kannst","title":"Wie du beitragen kannst","text":""},{"location":"Contributing/Contributing/#1-ideen-und-vorschlage","title":"1. Ideen und Vorschl\u00e4ge","text":"<ul> <li>Erstelle ein Issue im Repository, um Vorschl\u00e4ge oder Fehler zu melden.</li> </ul>"},{"location":"Contributing/Contributing/#2-code-beisteuern","title":"2. Code beisteuern","text":"<ul> <li>Forke das Repository und erstelle einen neuen Branch f\u00fcr deine \u00c4nderungen.</li> <li>F\u00fchre Tests lokal aus, bevor du einen Pull-Request (PR) erstellst.</li> <li>Stelle sicher, dass dein PR sauber dokumentiert ist und beschreibe, was ge\u00e4ndert wurde und warum.</li> </ul>"},{"location":"Contributing/Contributing/#3-dokumentation-verbessern","title":"3. Dokumentation verbessern","text":"<ul> <li>Auch Verbesserungen der Dokumentation sind willkommen! Hilf uns, die Inhalte klar und zug\u00e4nglich zu gestalten.</li> </ul>"},{"location":"Contributing/Contributing/#arbeiten-mit-metricspy-und-predicatespy","title":"Arbeiten mit <code>metrics.py</code> und <code>predicates.py</code>","text":""},{"location":"Contributing/Contributing/#metricspy","title":"<code>metrics.py</code>","text":"<ul> <li>Neue Metriken k\u00f6nnen durch Hinzuf\u00fcgen einer Funktion in <code>metrics.py</code> erstellt werden.</li> <li>Nutze den <code>@metrics</code>-Dekorator, um die Funktion als Metrik zu markieren.</li> <li>Beispiel:     <pre><code>@metrics     \ndef example_metric(data):    \n    # Deine Logik hier    \n    return result    \n</code></pre></li> </ul>"},{"location":"Contributing/Contributing/#predicatespy","title":"<code>predicates.py</code>","text":"<ul> <li>Pr\u00e4dikate liefern boolesche Antworten zu spezifischen Eigenschaften des Repositories.</li> <li>Neue Pr\u00e4dikate k\u00f6nnen durch Hinzuf\u00fcgen einer Funktion in predicates.py erstellt werden.</li> <li>Beispiel:     <pre><code>@predicates\ndef example_predicate(repo_data):\n    # \u00dcberpr\u00fcft, ob Branch-Schutz aktiviert ist\n    return repo_data.get(\"branch_protection\", False) is True\n</code></pre></li> </ul>"},{"location":"FAQ/FAQ/","title":"FAQ","text":""},{"location":"FAQ/FAQ/#faq-haufig-gestellte-fragen","title":"FAQ - H\u00e4ufig gestellte Fragen","text":""},{"location":"FAQ/FAQ/#frage-1-wie-ist-die-struktur-der-datenbank","title":"Frage 1: Wie ist die Struktur der Datenbank?","text":""},{"location":"FAQ/FAQ/#frage-2-wieso-wurde-duckdb-als-datenbank-verwendet","title":"Frage 2: Wieso wurde DuckDB als Datenbank verwendet?","text":"<ol> <li>Einfach einzurichten ist: Keine separate Serverinstallation erforderlich.  </li> <li>Schnell arbeitet: Hohe Abfragegeschwindigkeit f\u00fcr effiziente Analysen.  </li> <li>API-Ratenbeschr\u00e4nkungen umgeht: Lokale Speicherung reduziert Abh\u00e4ngigkeiten von API-Anfragen.  </li> <li>Stabile Metriken erm\u00f6glicht: Eine robuste Grundlage f\u00fcr die Datenverarbeitung bietet.</li> </ol>"},{"location":"FAQ/FAQ/#frage-3-wieso-wurde-pylint-zur-bewertung-der-codequalitat-verwendet","title":"Frage 3: Wieso wurde Pylint zur Bewertung der Codequalit\u00e4t verwendet?","text":"<ol> <li>Statische Codeanalyse erm\u00f6glicht: Es identifiziert Fehler ohne Codeausf\u00fchrung.  </li> <li>PEP8-konform ist: Sorgt f\u00fcr klare, wartbare Code-Struktur.  </li> <li>Flexibel bewertbar ist: Skala von 0 bis 10, anpassbar an Projektspezifika.  </li> <li>Effizient integriert ist: Automatische Bewertung relevanter Python-Dateien.</li> </ol>"},{"location":"FAQ/FAQ/#frage-4-warum-wurden-bestimmte-metriken-priorisiert","title":"Frage 4: Warum wurden bestimmte Metriken priorisiert?","text":"<p>Die Priorisierung der Metriken erfolgte auf Basis ihrer Relevanz f\u00fcr die Repository-Gesundheit: 1. Messbarkeit: Metriken wie Commit-H\u00e4ufigkeit und PR-Status sind einfach zu erfassen und aussagekr\u00e4ftig f\u00fcr Aktivit\u00e4t und Fortschritt. 2. Qualit\u00e4tsbewertung: Metriken wie Review-Zeiten und Branch-Protection unterst\u00fctzen die Bewertung der Codequalit\u00e4t und der Entwicklungseffizienz. 3. Relevanz f\u00fcr Teamprozesse: Workflow-bezogene Metriken wie CI/CD-Status und Merge-Zeiten zeigen direkt Optimierungspotenziale in Entwicklungsprozessen auf. 4. Verf\u00fcgbarkeit der Daten: Die Auswahl beschr\u00e4nkte sich auf Metriken, deren Daten \u00fcber die GitHub-API und vorhandene Tools wie Pylint verf\u00fcgbar waren.</p>"},{"location":"FAQ/FAQ/#frage-5-wieso-wurde-pandas-verwendet","title":"Frage 5: Wieso wurde Pandas verwendet?","text":"<p>Pandas wurde aufgrund seiner vielseitigen Funktionen und Effizienz verwendet: 1. Flexible Datenmanipulation: Es erm\u00f6glicht die einfache Filterung, Transformation und Aggregation von gro\u00dfen Datenmengen. 2. Kompatibilit\u00e4t: Die Integration mit anderen Python-Bibliotheken wie NumPy und Matplotlib macht es zu einer idealen Wahl f\u00fcr analytische Workflows. 3. Performance: Pandas bietet optimierte Datenrahmenstrukturen, die ideal f\u00fcr die Verarbeitung der Repository-Metriken geeignet sind. 4. Einfachheit: Es reduziert den Implementierungsaufwand durch seine umfangreiche API und Dokumentation.</p>"},{"location":"FAQ/FAQ/#frage-6-wieso-habe-ich-bestimmte-visualisierungsmoglichkeiten-gewahlt","title":"Frage 6: Wieso habe ich bestimmte Visualisierungsm\u00f6glichkeiten gew\u00e4hlt?","text":"<p>Die Visualisierungen wurden gezielt auf Basis ihrer Aussagekraft gew\u00e4hlt: 1. Balkendiagramme: Sie erm\u00f6glichen einen klaren Vergleich von Aktivit\u00e4tsmetriken wie Commit- und PR-Zahlen. 2. Liniendiagramme: Zeigen Trends und Entwicklungen \u00fcber Zeitr\u00e4ume, z. B. bei Merge-Zeiten. 3. Heatmaps: Kompakt und pr\u00e4gnant f\u00fcr den Vergleich von Repositories oder Metrikrelationen, z. B. \u201eOpen vs. Closed Issues\u201c. 4. Boxplots: Zur Analyse der Verteilung von Review-Zeiten und Identifikation von Ausrei\u00dfern.</p>"},{"location":"FAQ/FAQ/#frage-7-welche-herausforderungen-traten-auf","title":"Frage 7: Welche Herausforderungen traten auf?","text":"<p>Im Projekt wurden mehrere Herausforderungen bew\u00e4ltigt: 1. Datenzugang: Ratenbeschr\u00e4nkungen der GitHub-API verlangsamten die Datenerhebung. 2. Datenkonsistenz: Unterschiedliche Formate und Quellen erforderten eine standardisierte Datenaufbereitung. 3. Metrikvalidierung: Die Bedeutung und Aussagekraft einzelner Metriken variiert je nach Repository-Typ. 4. Erweiterbarkeit: Die Architektur musste modular sein, um neue Metriken flexibel integrieren zu k\u00f6nnen.</p>"},{"location":"FAQ/FAQ/#frage-8-welche-kritischen-metriken-wurden-vernachlassigt","title":"Frage 8: Welche kritischen Metriken wurden vernachl\u00e4ssigt?","text":"<p>Einige wichtige Metriken konnten nicht vollst\u00e4ndig abgedeckt werden: 1. Testabdeckung: Eine Schl\u00fcsselmetrik f\u00fcr Codequalit\u00e4t, die aufgrund fehlender Datenquellen nicht integriert wurde. 2. Langzeittrends: Historische Entwicklungen wurden eingeschr\u00e4nkt ber\u00fccksichtigt, da umfassende Daten nicht verf\u00fcgbar waren. 3. Teamdynamik: Qualitative Aspekte wie Kommunikation und Wissensaustausch konnten nicht durch Metriken erfasst werden. 4. Fehleranalysen: Die detaillierte Verfolgung von Fehlerursachen blieb au\u00dferhalb des Projektumfangs.</p>"},{"location":"FAQ/FAQ/#quellen","title":"Quellen:","text":""},{"location":"Guide/Features/","title":"Features","text":""},{"location":"Guide/Features/#1-measure-daten-erfassen","title":"1. <code>measure</code>: Daten erfassen","text":""},{"location":"Guide/Features/#argumente","title":"Argumente","text":"<ul> <li><code>-q</code> (query):</li> <li> <p>Beispiel: <code>surveyhawk measure -q \"topic:python\"</code></p> </li> <li> <p><code>-i</code> (interactive):</p> </li> <li> <p>Beispiel: <code>surveyhawk measure -i</code></p> </li> <li> <p><code>-p</code> (public):</p> </li> <li>Beispiel: <code>surveyhawk measure -p</code></li> </ul> <p></p>"},{"location":"Guide/Features/#2-metrics-metriken-analysieren","title":"2. <code>metrics</code>: Metriken analysieren","text":""},{"location":"Guide/Features/#argumente_1","title":"Argumente","text":"<ul> <li><code>-q</code> (query):</li> <li> <p>Beispiel: <code>surveyhawk metrics -q \"language:python\"</code></p> </li> <li> <p><code>-i</code> (interactive):</p> </li> <li> <p>Beispiel: <code>surveyhawk metrics -i</code></p> </li> <li> <p><code>-p</code> (public):</p> </li> <li> <p>Beispiel: <code>surveyhawk metrics -p</code></p> </li> <li> <p><code>-v</code> (visualize): </p> </li> <li>Beispiel: <code>surveyhawk metrics -v</code></li> </ul> <p></p>"},{"location":"Guide/Features/#3-predicates-qualitative-eigenschaften-bewerten","title":"3. <code>predicates</code>: Qualitative Eigenschaften bewerten","text":""},{"location":"Guide/Features/#argumente_2","title":"Argumente","text":"<ul> <li><code>-q</code> (query):</li> <li> <p>Beispiel: <code>surveyhawk predicates -q \"topic:devops\"</code></p> </li> <li> <p><code>-p</code> (public):</p> </li> <li> <p>Beispiel: <code>surveyhawk metrics -p</code></p> </li> <li> <p><code>-i</code> (interactive):</p> </li> <li>Beispiel: <code>surveyhawk predicates -i</code></li> </ul>"},{"location":"Guide/Features/#-beispielmetriken-surveyhawk","title":"--&gt; \ud83d\udd0e Beispielmetriken Surveyhawk","text":""},{"location":"Guide/Getting-Started/","title":"Getting-Started","text":""},{"location":"Guide/Getting-Started/#quellen","title":"Quellen:","text":""},{"location":"Guide/Installation/","title":"Installation","text":""},{"location":"Guide/Installation/#quellen","title":"Quellen:","text":""},{"location":"Guide/Health-Checks/Metrics/","title":"Metrics","text":"<p>Metriken sind der Schl\u00fcssel zur Bewertung der Repository-Gesundheit. Sie liefern klare Einblicke in die Effizienz, Qualit\u00e4t und Aktivit\u00e4t eines Projekts.</p>"},{"location":"Guide/Health-Checks/Metrics/#aktivitatsmetriken","title":"\ud83d\udd25 Aktivit\u00e4tsmetriken","text":""},{"location":"Guide/Health-Checks/Metrics/#qualitatsmetriken","title":"\ud83d\udc8e Qualit\u00e4tsmetriken","text":""},{"location":"Guide/Health-Checks/Metrics/#_1","title":"Metrics","text":""},{"location":"Guide/Health-Checks/Metrics/#workflow-metriken","title":"\ud83d\udd04 Workflow-Metriken","text":""},{"location":"Guide/Health-Checks/Metrics/#beispielrechnung-einer-metrik","title":"Beispielrechnung einer Metrik","text":""},{"location":"Guide/Health-Checks/Metrics/#-ergebnisse","title":"--&gt; Ergebnisse","text":""},{"location":"Repository-Health/Foundations/","title":"Grundlagen der Repository-Gesundheit","text":""},{"location":"Repository-Health/Foundations/#wie-erreiche-ich-ein-gesundes-repository","title":"Wie erreiche ich ein gesundes Repository?","text":""},{"location":"Repository-Health/Foundations/#devops-praktiken-unterstutzen-repository-gesundheit","title":"DevOps Praktiken unterst\u00fctzen Repository-Gesundheit","text":""},{"location":"Repository-Health/Foundations/#oss-vs-css","title":"OSS vs CSS","text":"Aspekt OSS \ud83c\udf10 CSS \ud83d\udd12 Zug\u00e4nglichkeit Jeder Privat Aktivit\u00e4t Hoch Gering Nutzerbasis Abh\u00e4ngig von einer aktiven Community. Intern begrenzt Teamstruktur Community-getrieben, wechselnde Mitwirkende. Feste Entwicklergruppe mit klaren Rollen. Sicherheitsansatz Sicherheit durch Community-Beteiligung. Geschlossene Entwicklung und begrenzter Zugriff."},{"location":"Repository-Health/Foundations/#-wie-funktioneirt-surveyhawk","title":"--&gt; \ud83d\udcbb Wie funktioneirt Surveyhawk?","text":""},{"location":"Repository-Health/intro_RH/","title":"Introduction","text":""},{"location":"Repository-Health/intro_RH/#die-herausforderungen","title":"Die Herausforderungen:","text":"<p>\u274c Ineffiziente Prozesse bremsen die Softwareentwicklung aus \u274c Qualit\u00e4tsdefizite werden erst sp\u00e4t erkannt \u274c Unzureichende Automatisierung \u274c Mangelnde Sicherheit </p> <ol> <li>Entwicklung einer systematischen Methode zur kontinuierlichen Bewertung der Repository-Gesundheit</li> <li>Untersuchen der Unterschiede in der Bewertung und Pflege zwischen Open-Source-Software (OSS) und Closed-Source-Software (CSS)</li> </ol> <p></p>"},{"location":"Repository-Health/intro_RH/#-grundlagen-der-repository-gesundheit","title":"--&gt; \ud83d\udcda Grundlagen der Repository-Gesundheit","text":""},{"location":"Results/Insights/","title":"Insights","text":""},{"location":"Results/Results/","title":"Results and Analysis","text":""},{"location":"Results/Results/#aktivitatsmetriken-merges-to-main","title":"Aktivit\u00e4tsmetriken - Merges to Main","text":"<p>Diese Metrik zeigt, wie oft \u00c4nderungen erfolgreich in den Hauptbranch gemerged wurden. Dies ist ein Indikator f\u00fcr ein gesundes Repository.</p> <p> Merges to Main - Private Repository</p> <p> Merges to Main - Public Repository</p>"},{"location":"Results/Results/#qualitatsmetriken-rating-per-pythonfile","title":"Qualit\u00e4tsmetriken - Rating per Pythonfile","text":"<p>Diese Metrik bewertet die Qualit\u00e4t der Python-Dateien in Bezug auf Wartbarkeit und Code-Standards.</p> <p> Rating per Python File - Private Repository</p> <p> Rating per Python File - Public Repository</p>"},{"location":"Results/Results/#workflow-metriken-github-success-rate","title":"Workflow-Metriken - GitHub Success Rate","text":"<p>Diese Metrik gibt an, wie oft GitHub Actions Workflows erfolgreich abgeschlossen wurden. Eine hohe Erfolgsrate zeigt ein stabiles Build-System.</p> <p> GitHub Success Rate - Private Repository</p> <p> GitHub Success Rate - Public Repository</p>"}]}